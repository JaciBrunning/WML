import groovy.json.JsonOutput

Map<String, Object> vendorJson() {
	return [
		fileName: "${nativeName}.json",
		name: "${nativeName}",
		version: artifactVersion,
		uuid: "${artifactUUID}",
		mavenUrls: [
			mavenClientURL
		],

		jsonUrl: "${mavenClientURL}/${artifactGroupID_URL}/${depsName}/${artifactVersion}/${depsName}-${artifactVersion}.json",
		cppDependencies: [
			cpp_optionalDependencies
		]
	]
}

Map<String, Object> vendorJsonLatest() {
	return [
		fileName: "${nativeName}-latest.json",
		name: "${nativeName}",
		version: artifactVersion,
		uuid: "${artifactUUID}",
		mavenUrls: [
			mavenClientURL
		],

		jsonUrl: "${mavenClientURL}/${artifactGroupID_URL}/${depsName}/latest/${depsName}-latest.json",
		cppDependencies: [
			cpp_optionalDependencies
		]
	]
}

String vendorJsonString() {
	return JsonOutput.prettyPrint(JsonOutput.toJson(vendorJson()))
}

String vendorJsonLatestString() {
	return JsonOutput.prettyPrint(JsonOutput.toJson(vendorJsonLatest()))
}

task generateVendorDepsJson() {
	def outfile = new File(rootProject.buildDir, "${nativeName}.json")
	def outfileLatest = new File(rootProject.buildDir, "${nativeName}-latest.json")
	outputs.file(outfile)
	outputs.file(outfileLatest)

	doLast {
		outfile.text = vendorJsonString()
		outfileLatest.text = vendorJsonLatestString()
	}
}